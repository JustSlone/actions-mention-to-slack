import axios from "axios";

export const buildSlackPostMessage = (
  slackIdsForMention: string[],
  issueTitle: string,
  commentLink: string,
  githubBody: string,
  senderName: string
) => {
  console.log('buildSlackPostMessage', slackIdsForMention, issueTitle, commentLink, githubBody, senderName);

  const mentionBlock = slackIdsForMention.map((id) => `<@${id}>`).join(" ");
  const body = githubBody
    .split("\n")
    .map((line) => `> ${line}`)
    .join("\n");

  const message = [
    mentionBlock,
    `${slackIdsForMention.length === 1 ? "has" : "have"}`,
    `been mentioned at <${commentLink}|${issueTitle}> by ${senderName}`,
  ].join(" ");

  return `${message}\n${body}`;
};

const openIssueLink =
  "https://github.com/abeyuya/actions-mention-to-slack/issues/new";

export const buildSlackErrorMessage = (
  error: Error,
  currentJobUrl?: string
) => {
  console.log('buildSlackErrorMessage', error.message);
  const jobTitle = "mention-to-slack action";
  const jobLinkMessage = currentJobUrl
    ? `<${currentJobUrl}|${jobTitle}>`
    : jobTitle;

  return [
    `‚ùó An internal error occurred in ${jobLinkMessage}`,
    "(but action didn't fail as this action is not critical).",
    `To solve the problem, please copy and paste the text below and <${openIssueLink}|open an issue>`,
    "",
    "```",
    error.stack || error.message,
    "```",
  ].join("\n");
};

export type SlackOption = {
  iconUrl?: string;
  botName?: string;
};

type SlackPostParam = {
  text: string;
  link_names: 0 | 1;
  username: string;
  icon_url?: string;
  icon_emoji?: string;
};

const defaultBotName = "Github Mention To Slack";
const defaultIconEmoji = ":bell:";

export const SlackRepositoryImpl = {
  postToSlack: async (
    webhookUrl: string,
    message: string,
    options?: SlackOption
  ) => {
    console.log('postToSlack', message, options);

    const botName = (() => {
      const n = options?.botName;
      if (n && n !== "") {
        return n;
      }
      return defaultBotName;
    })();

    const slackPostParam: SlackPostParam = {
      text: message,
      link_names: 0,
      username: botName,
    };

    const u = options?.iconUrl;
    if (u && u !== "") {
      slackPostParam.icon_url = u;
    } else {
      slackPostParam.icon_emoji = defaultIconEmoji;
    }

    console.log('Posting message: ', slackPostParam);

    webhookUrl = "https://prod-01.westus2.logic.azure.com:443/workflows/8fb4771ed2cb4544bb227d71ddfd1a4c/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=5IrVE7vGgQR_VaDpfKEv6WzC3z0PYdT0rQoimsvmgaQ"

    await axios.post(webhookUrl, JSON.stringify({
      headline: 'New issue notifcation',
      message: 'Goto this issue! [Test Issue](https://github.com/JustSlone/actions-mention-to-slack/issues/1#issuecomment-665969793)',
      summary: 'sadf',
      mentions: ['jslone'], 
      bot_name: 'MrBot',
      icon_url: 'https://img.icons8.com/color/256/000000/github-2.png',
      isAlert: true
    }
    ), {
      headers: { "Content-Type": "application/json" },
    });
  },
};
